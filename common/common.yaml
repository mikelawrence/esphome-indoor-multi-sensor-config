# common setup for all devices
substitutions:
  version_suffix: ""
  config_version: dev${version_suffix}
  # Status LED configuration
  status_nightlight_brightness: "1.0"
  status_day_brightness: "0.5"
  status_night_brightness: "0.15"
  status_daytime_lux: "10.0"
  status_nighttime_lux: "3.0"
  presence_ha_entity: ""

esphome:
  min_version: 2025.8.4
  name_add_mac_suffix: false
  project:
    version: ${config_version}
  on_boot:
    - priority: -400
      then:
        - script.execute: update_status_led
        - script.execute: announce_operational
  on_shutdown:
    - priority: 700
      then:
        - light.turn_off:
            id: led_status

# ESP32-S3-WROOM-2-N32R16V
esp32:
  board: esp32s3box
  variant: ESP32S3
  # It should support the actual 32MB, but...
  flash_size: 16MB
  cpu_frequency: 240MHz
  framework:
    type: esp-idf

# There is 16MB of PSRAM
psram:
  mode: octal
  speed: 80MHz

logger:
  id: logger_common
  level: DEBUG

globals:
  - id: board_temperature_var
    type: float
    initial_value: NAN
  - id: ha_presence_var
    type: bool
    initial_value: "false"
  - id: sht4x_available_var
    type: bool
    initial_value: "false"
  - id: co_available_var
    type: bool
    initial_value: "false"
  - id: co2_available_var
    type: bool
    initial_value: "false"
  - id: pm25_available_var
    type: bool
    initial_value: "false"
  - id: co_400ppm_alarm_var
    # This means CO levels are dangerous and can cause death in a few hours
    type: bool
    initial_value: "false"
  - id: co_150ppm_alarm_var
    # This means CO levels are dangerous and may have serious health issues if exposed too long
    type: bool
    initial_value: "false"
  - id: co_70ppm_alarm_var
    # This means CO levels are elevated and may have health issues if exposed too long
    type: bool
    initial_value: "false"
  - id: co_alarm_var
    # This means CO levels are elevated and likely dangerous
    type: bool
    initial_value: "false"
  - id: co_warning_var
    # This means CO levels are elevated but not dangerous
    type: bool
    initial_value: "false"
  - id: co2_alarm_var
    # This means CO₂ levels are elevated and likely dangerous
    type: bool
    initial_value: "false"
  - id: co2_warning_var
    # This means CO₂ levels are elevated but not dangerous
    type: bool
    initial_value: "false"
  - id: pm25_alarm_var
    # This means PM2.5 levels are elevated and likely dangerous
    type: bool
    initial_value: "false"
  - id: pm25_warning_var
    # This means PM2.5 levels are elevated but not dangerous
    type: bool
    initial_value: "false"

# All but the SEN6X is on this bus
i2c:
  - id: i2c1_bus
    sda: GPIO48
    scl: GPIO47
    frequency: 400kHz
    scan: true

# audio DAC for speaker
i2s_audio:
  - id: speaker_i2s
    i2s_lrclk_pin: GPIO12
    i2s_bclk_pin: GPIO11

debug:
  update_interval: 60s

time:
  - platform: homeassistant
    id: homeassistant_time

script:
  - id: update_status_led
    mode: restart
    then:
      lambda: |-
        static bool last_state;
        static bool daytime = true;
        static float last_r, last_g, last_b, last_brightness = ${status_night_brightness};
        bool state = false;
        float r, g, b, brightness = last_brightness;

        if (id(nightlight_enable).state) {
          state = true;
          r = 1.0; g = 1.0; b = 1.0;
          brightness = ${status_nightlight_brightness};
        } else {
          if((id(lux).state < ${status_nighttime_lux}) ||
            (brightness == ${status_nightlight_brightness})) {
            if(daytime)
              ESP_LOGD("status", "Status LED switched to nighttime");
            brightness = ${status_night_brightness};
            daytime = false;
          } else if(id(lux).state > ${status_daytime_lux}) {
            if(!daytime)
              ESP_LOGD("status", "Status LED switched to daytime");
            brightness = ${status_day_brightness};
            daytime = true;
          }
        }
        if(!id(nightlight_enable).state && id(led_enable).state) {
          if (id(presence).state or id(ha_presence_var)) {
            state = true;
            r = 0.0; g = 0.0; b = 1.0;
          }
        }
        if(id(co_alarm_var) || id(co2_alarm_var) || id(pm25_alarm_var)) {
          state = true;
          r = 1.0; g = 0.0; b = 0.0;
          brightness = 1.0;
          ESP_LOGD("status", "Status LED switched to alarm");
        }
        if(id(co_warning_var) || id(co2_warning_var) || id(pm25_warning_var)) {
          state = true;
          r = 1.0; g = 1.0; b = 0.0;
          brightness = 1.0;
          ESP_LOGD("status", "Status LED switched to warning");
        }
        if (state == false) {
          if (last_state == true) {
            id(led_status).turn_off().set_transition_length(0).perform();
            ESP_LOGD("status", "Status LED turned off");
          }
        } else {
          if ((last_state == false) || (last_r != r) || (last_g != g) ||
              (last_b != b) || (last_brightness != brightness)) {
            id(led_status).turn_on().set_transition_length(0).
              set_rgb(r, g, b).set_brightness(brightness).perform();
            ESP_LOGD("status", "Status LED turned on");
          }
        }
        last_state = state;
        last_brightness = brightness;
        last_r = r;
        last_g = g;
        last_b = b;
  - id: announce_operational
    mode: restart
    then:
      - if:
          condition:
            switch.is_on: announcements
          then:
            - media_player.volume_set: !lambda "return id(volume).state / 100.0;"
            - media_player.speaker.play_on_device_media_file:
                media_file: office_sound
            - media_player.speaker.play_on_device_media_file:
                media_file: multi_sensor_operational_sound
                enqueue: true

binary_sensor:
  - platform: homeassistant
    id: ha_presence
    entity_id: ${presence_ha_entity}
    on_state_change:
      then:
        - lambda: |-
            if(x.has_value()) {
              id(ha_presence_var) = x.value();
            } else {
              id(ha_presence_var) = false;
            }

        - script.execute: update_status_led
  - platform: template
    name: "Presence"
    id: presence
    device_class: presence
    lambda: |-
      if(id(presence_mmwave).state or
        (id(pir_enable).state && id(motion_pir).state)) {
        return true;
      } else {
        return false;
      }
    on_state:
      then:
        script.execute: update_status_led
  - platform: gpio
    id: motion_pir
    name: "PIR Motion"
    device_class: motion
    pin:
      number: GPIO38
    filters:
      - delayed_off: 10s

button:
  - platform: restart
    name: "Restart"
    entity_category: config

light:
  - platform: esp32_rmt_led_strip
    id: led_status
    rgb_order: RGB
    pin: GPIO8
    num_leds: 1
    chipset: ws2812

media_player:
  - platform: speaker
    name: "Media Player"
    id: speaker_media_player_id
    volume_max: 90%
    media_pipeline:
      speaker: media_spk_resampling_input
      num_channels: 2
    announcement_pipeline:
      speaker: announcement_spk_resampling_input
      num_channels: 1
    files:
      - id: multi_sensor_operational_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/multi-sensor-operational.mp3
      - id: bathroom_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/bathroom.mp3
      - id: bedroom_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/bedroom.mp3
      - id: dining_room_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/dining-room.mp3
      - id: entry_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/entry.mp3
      - id: garage_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/garage.mp3
      - id: guest_bathroom_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/guest-bathroom.mp3
      - id: kitchen_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/kitchen.mp3
      - id: laundry_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/laundry.mp3
      - id: living_room_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/living-room.mp3
      - id: master_bathroom_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/master-bathroom.mp3
      - id: master_toilet_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/master-toilet.mp3
      - id: master_bedroom_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/master-bedroom.mp3
      - id: master_closet_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/master-closet.mp3
      - id: office_sound
        file: https://raw.githubusercontent.com/mikelawrence/esphome-indoor-multi-sensor-config/${ref}/media/office.mp3

number:
  - platform: template
    id: volume
    name: "Default Volume"
    optimistic: true
    max_value: 100
    min_value: 0
    step: 1
    initial_value: 90
    restore_value: true

power_supply:
  # Enable audio DAC Power
  - id: dac_enable
    pin: GPIO9
    enable_on_boot: true

sensor:
  - platform: debug
    free:
      name: "Heap Free"
    block:
      name: "Heap Max Block"
    loop_time:
      name: "Loop Time"

speaker:
  - platform: i2s_audio
    id: speaker_id
    i2s_audio_id: speaker_i2s
    dac_type: external
    i2s_dout_pin: GPIO10
    sample_rate: 48000
  - platform: mixer
    id: mixer_speaker_id
    output_speaker: speaker_id
    source_speakers:
      - id: announcement_spk_mixer_input
      - id: media_spk_mixer_input
  - platform: resampler
    id: media_spk_resampling_input
    output_speaker: media_spk_mixer_input
    sample_rate: 48000
  - platform: resampler
    id: announcement_spk_resampling_input
    output_speaker: announcement_spk_mixer_input
    sample_rate: 48000

switch:
  - platform: template
    name: "PIR Enable"
    id: pir_enable
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    name: "LED Enable"
    id: led_enable
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      script.execute: update_status_led
    on_turn_off:
      script.execute: update_status_led
  - platform: template
    name: "Announcements"
    id: announcements
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    name: "Nightlight Enable"
    id: nightlight_enable
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      script.execute: update_status_led
    on_turn_off:
      script.execute: update_status_led
